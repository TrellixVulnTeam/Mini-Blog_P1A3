{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\nexport const alertService = {\n  onAlert,\n  success: success(message),\n  error: error,\n  info,\n  warn,\n  alert,\n  clear\n};\nexport const AlertType = {\n  Success: \"success\",\n  Error: \"danger\",\n  Info: \"info\",\n  Warning: \"warning\"\n};\nconst alertSubject = new Subject();\nconst defaultId = \"default-alert\"; // enable subscribing to alerts observable\n\nfunction onAlert() {\n  let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultId;\n  return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n} // convenience methods\n\n\nfunction success(message, options) {\n  alert({ ...options,\n    type: AlertType.Success,\n    message\n  });\n}\n\nfunction error(message, options) {\n  alert({ ...options,\n    type: AlertType.Error,\n    message\n  });\n}\n\nfunction info(message, options) {\n  alert({ ...options,\n    type: AlertType.Info,\n    message\n  });\n}\n\nfunction warn(message, options) {\n  alert({ ...options,\n    type: AlertType.Warning,\n    message\n  });\n} // core alert method\n\n\nfunction alert(alert) {\n  alert.id = alert.id || defaultId;\n  alertSubject.next(alert);\n} // clear alerts\n\n\nfunction clear() {\n  let id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultId;\n  alertSubject.next({\n    id\n  });\n}","map":{"version":3,"sources":["/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Alert/alert.service.js"],"names":["Subject","filter","alertService","onAlert","success","message","error","info","warn","alert","clear","AlertType","Success","Error","Info","Warning","alertSubject","defaultId","id","asObservable","pipe","x","options","type","next"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAD0B;AAE1BC,EAAAA,OAAO,EAAEA,OAAO,CAACC,OAAD,CAFU;AAG1BC,EAAAA,KAAK,EAAEA,KAHmB;AAI1BC,EAAAA,IAJ0B;AAK1BC,EAAAA,IAL0B;AAM1BC,EAAAA,KAN0B;AAO1BC,EAAAA;AAP0B,CAArB;AAUP,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,OAAO,EAAE,SADc;AAEvBC,EAAAA,KAAK,EAAE,QAFgB;AAGvBC,EAAAA,IAAI,EAAE,MAHiB;AAIvBC,EAAAA,OAAO,EAAE;AAJc,CAAlB;AAOP,MAAMC,YAAY,GAAG,IAAIhB,OAAJ,EAArB;AACA,MAAMiB,SAAS,GAAG,eAAlB,C,CAEA;;AACA,SAASd,OAAT,GAAiC;AAAA,MAAhBe,EAAgB,uEAAXD,SAAW;AAC/B,SAAOD,YAAY,CAACG,YAAb,GAA4BC,IAA5B,CAAiCnB,MAAM,CAAEoB,CAAD,IAAOA,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAtB,CAAvC,CAAP;AACD,C,CAED;;;AACA,SAASd,OAAT,CAAiBC,OAAjB,EAA0BiB,OAA1B,EAAmC;AACjCb,EAAAA,KAAK,CAAC,EAAE,GAAGa,OAAL;AAAcC,IAAAA,IAAI,EAAEZ,SAAS,CAACC,OAA9B;AAAuCP,IAAAA;AAAvC,GAAD,CAAL;AACD;;AAED,SAASC,KAAT,CAAeD,OAAf,EAAwBiB,OAAxB,EAAiC;AAC/Bb,EAAAA,KAAK,CAAC,EAAE,GAAGa,OAAL;AAAcC,IAAAA,IAAI,EAAEZ,SAAS,CAACE,KAA9B;AAAqCR,IAAAA;AAArC,GAAD,CAAL;AACD;;AAED,SAASE,IAAT,CAAcF,OAAd,EAAuBiB,OAAvB,EAAgC;AAC9Bb,EAAAA,KAAK,CAAC,EAAE,GAAGa,OAAL;AAAcC,IAAAA,IAAI,EAAEZ,SAAS,CAACG,IAA9B;AAAoCT,IAAAA;AAApC,GAAD,CAAL;AACD;;AAED,SAASG,IAAT,CAAcH,OAAd,EAAuBiB,OAAvB,EAAgC;AAC9Bb,EAAAA,KAAK,CAAC,EAAE,GAAGa,OAAL;AAAcC,IAAAA,IAAI,EAAEZ,SAAS,CAACI,OAA9B;AAAuCV,IAAAA;AAAvC,GAAD,CAAL;AACD,C,CAED;;;AACA,SAASI,KAAT,CAAeA,KAAf,EAAsB;AACpBA,EAAAA,KAAK,CAACS,EAAN,GAAWT,KAAK,CAACS,EAAN,IAAYD,SAAvB;AACAD,EAAAA,YAAY,CAACQ,IAAb,CAAkBf,KAAlB;AACD,C,CAED;;;AACA,SAASC,KAAT,GAA+B;AAAA,MAAhBQ,EAAgB,uEAAXD,SAAW;AAC7BD,EAAAA,YAAY,CAACQ,IAAb,CAAkB;AAAEN,IAAAA;AAAF,GAAlB;AACD","sourcesContent":["import { Subject } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\nexport const alertService = {\n  onAlert,\n  success: success(message),\n  error: error,\n  info,\n  warn,\n  alert,\n  clear\n};\n\nexport const AlertType = {\n  Success: \"success\",\n  Error: \"danger\",\n  Info: \"info\",\n  Warning: \"warning\"\n};\n\nconst alertSubject = new Subject();\nconst defaultId = \"default-alert\";\n\n// enable subscribing to alerts observable\nfunction onAlert(id = defaultId) {\n  return alertSubject.asObservable().pipe(filter((x) => x && x.id === id));\n}\n\n// convenience methods\nfunction success(message, options) {\n  alert({ ...options, type: AlertType.Success, message });\n}\n\nfunction error(message, options) {\n  alert({ ...options, type: AlertType.Error, message });\n}\n\nfunction info(message, options) {\n  alert({ ...options, type: AlertType.Info, message });\n}\n\nfunction warn(message, options) {\n  alert({ ...options, type: AlertType.Warning, message });\n}\n\n// core alert method\nfunction alert(alert) {\n  alert.id = alert.id || defaultId;\n  alertSubject.next(alert);\n}\n\n// clear alerts\nfunction clear(id = defaultId) {\n  alertSubject.next({ id });\n}\n"]},"metadata":{},"sourceType":"module"}