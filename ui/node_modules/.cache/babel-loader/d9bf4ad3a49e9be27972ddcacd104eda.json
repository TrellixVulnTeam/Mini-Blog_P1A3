{"ast":null,"code":"var _jsxFileName = \"/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Blog/BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Blog from \"./index\";\nimport axios from \"axios\";\nimport Pagination from \"../Pagination/Pagination\";\nimport style from \"./styles.module.scss\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PageSize = 10;\n\nconst BlogList = () => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [blogs, setBlogs] = useState([]);\n  const baseURL = `http://localhost:8082/miniblog/backend/v1/blogs`;\n  const headers = {\n    apikey: \"2347edfd-c55c-4f59-96ee-600492f904f3\"\n  };\n  const currentData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    console.log(lastPageIndex);\n    return blogs.slice(firstPageIndex, lastPageIndex);\n  }, [blogs]);\n  useEffect(() => {\n    axios.get(baseURL, {\n      headers\n    }).then(response => {\n      setBlogs(response.data);\n    });\n  }, [currentPage]);\n  const {\n    lazy,\n    Suspense\n  } = React;\n  const Lazy = lazy(() => new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        default: () => {\n          currentData.map(blog => {\n            return /*#__PURE__*/_jsxDEV(Blog, {\n              blog: blog,\n              loading: \"lazy\"\n            }, blog.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 16\n            }, this);\n          });\n        }\n      });\n    }, 4000);\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style[\"list\"],\n    children: [currentData.map(blog => {\n      return /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this),\n        children: \"Lazy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-bar\",\n      currentPage: currentPage,\n      totalCount: blogs.length,\n      pageSize: PageSize,\n      onPageChange: page => setCurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      className: style[\"button\"],\n      to: \"/blogs\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: style[\"tooltip\"],\n        children: \"Add post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogList, \"ofWOz6v0/NFfnBwQxEDYvGxNKt8=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"sources":["/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Blog/BlogList.jsx"],"names":["React","useEffect","useState","useMemo","Blog","axios","Pagination","style","Link","PageSize","BlogList","currentPage","setCurrentPage","blogs","setBlogs","baseURL","headers","apikey","currentData","firstPageIndex","lastPageIndex","console","log","slice","get","then","response","data","lazy","Suspense","Lazy","Promise","resolve","setTimeout","default","map","blog","id","length","page"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport Blog from \"./index\";\nimport axios from \"axios\";\nimport Pagination from \"../Pagination/Pagination\";\nimport style from \"./styles.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nlet PageSize = 10;\n\nconst BlogList = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [blogs, setBlogs] = useState([]);\n\n  const baseURL = `http://localhost:8082/miniblog/backend/v1/blogs`;\n  const headers = {\n    apikey: \"2347edfd-c55c-4f59-96ee-600492f904f3\"\n  };\n\n  const currentData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    console.log(lastPageIndex);\n    return blogs.slice(firstPageIndex, lastPageIndex);\n  }, [blogs]);\n\n  useEffect(() => {\n    axios.get(baseURL, { headers }).then((response) => {\n      setBlogs(response.data);\n    });\n  }, [currentPage]);\n\n  const { lazy, Suspense } = React;\n\n  const Lazy = lazy(() => new Promise(resolve => {\n    setTimeout(() => {\n      resolve({ default: () => {currentData.map((blog) => {\n        return <Blog key={blog.id} blog={blog} loading=\"lazy\" />;\n      })} });\n    }, 4000);\n  }));\n\n  return (\n    <div className={style[\"list\"]}>\n      {currentData.map((blog) => {\n        return <Suspense fallback={ <div>Loading...</div> }>Lazy</Suspense>;\n      })}\n      <Pagination\n        className=\"pagination-bar\"\n        currentPage={currentPage}\n        totalCount={blogs.length}\n        pageSize={PageSize}\n        onPageChange={(page) => setCurrentPage(page)}\n      />\n      <Link className={style[\"button\"]} to=\"/blogs\">\n        <span className={style[\"tooltip\"]}>Add post</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default BlogList;\n"]},"metadata":{},"sourceType":"module"}