{"ast":null,"code":"var _jsxFileName = \"/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Blog/BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Blog from \"./index\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport style from './styles.module.scss';\nimport Pagination from \"../Pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PageSize = 4;\n\nconst BlogList = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const baseURL = `http://localhost:8082/miniblog/backend/v1/blogs`;\n  const headers = {\n    apikey: \"2347edfd-c55c-4f59-96ee-600492f904f3\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  };\n  const [limit, setLimit] = useState(4);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  const fetchData = async () => {\n    try {\n      const url = baseURL;\n      const fetch = await axios({\n        method: \"get\",\n        url: url,\n        headers: {\n          apikey: \"691c5597-e7d2-4c06-af49-f9369b367783\",\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        params: {\n          limit: limit,\n          q: query\n        }\n      }).then(request => {\n        setBlogs(request.data);\n      });\n      setIsLoading(true);\n    } catch (error) {}\n  };\n\n  useEffect(() => {\n    fetchData(); // axios.get(baseURL, { headers }).then((response) => {\n    //   setBlogs(response.data);\n    // });\n  }, [limit, query]);\n\n  const onChange = event => {\n    // fetchData(event.target.value);\n    setQuery(event.target.value);\n  };\n\n  const onClick = () => {\n    setLimit(limit + 4);\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return blogs.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: [blogs.map(blog => {\n      return /*#__PURE__*/_jsxDEV(Blog, {\n        id: blog.id,\n        image: blog.image,\n        title: blog.title,\n        intro: blog.intro,\n        createdAt: blog.createdAt,\n        category: blog.category\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-bar\",\n      currentPage: currentPage,\n      totalCount: blogs.length,\n      pageSize: PageSize,\n      onPageChange: page => setCurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogList, \"Sn+68DqNSaiVvglk+35qUU3MfrA=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"sources":["/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Blog/BlogList.jsx"],"names":["React","useEffect","useState","useMemo","Blog","axios","Link","style","Pagination","PageSize","BlogList","blogs","setBlogs","baseURL","headers","apikey","limit","setLimit","isLoading","setIsLoading","query","setQuery","fetchData","url","fetch","method","params","q","then","request","data","error","onChange","event","target","value","onClick","currentPage","setCurrentPage","currentTableData","firstPageIndex","lastPageIndex","slice","map","blog","id","image","title","intro","createdAt","category","length","page"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport Blog from \"./index\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport style from './styles.module.scss'\nimport Pagination from \"../Pagination/Pagination\";\n\nlet PageSize = 4;\n\nconst BlogList = () => {\n  const [blogs, setBlogs] = useState([]);\n  const baseURL = `http://localhost:8082/miniblog/backend/v1/blogs`;\n  const headers = {\n    apikey: \"2347edfd-c55c-4f59-96ee-600492f904f3\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  };\n\n  const [limit, setLimit] = useState(4)\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState(\"\")\n\n  const fetchData = async () => {\n    try {\n      const url = baseURL;\n      const fetch = await axios({\n        method: \"get\",\n        url: url,\n        headers: {\n          apikey: \"691c5597-e7d2-4c06-af49-f9369b367783\",\n          \"Access-Control-Allow-Origin\": \"*\",\n        },\n        params: {\n          limit: limit,\n          q: query\n        }\n      }).then((request) => {\n        setBlogs(request.data);\n      });\n      setIsLoading(true);\n    } catch (error) {\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n    // axios.get(baseURL, { headers }).then((response) => {\n    //   setBlogs(response.data);\n    // });\n  }, [limit, query]);\n  const onChange = (event) => {\n    // fetchData(event.target.value);\n    setQuery(event.target.value)\n  };\n\n  const onClick = () => {\n    setLimit(limit + 4)\n  }\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentTableData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return blogs.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n\n  return (\n    <div className=\"blog-list\">\n      {blogs.map((blog) => {\n        return (\n          <Blog\n            key={blog.id}\n            id={blog.id}\n            image={blog.image}\n            title={blog.title}\n            intro={blog.intro}\n            createdAt={blog.createdAt}\n            category={blog.category}\n          />\n        );\n      })}\n      <Pagination\n        className=\"pagination-bar\"\n        currentPage={currentPage}\n        totalCount={blogs.length}\n        pageSize={PageSize}\n        onPageChange={page => setCurrentPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default BlogList;\n"]},"metadata":{},"sourceType":"module"}