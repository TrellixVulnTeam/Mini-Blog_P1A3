{"ast":null,"code":"var _jsxFileName = \"/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Blog/BlogList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Blog from \"./index\";\nimport axios from \"axios\";\nimport Pagination from \"../Pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet PageSize = 4;\n\nconst BlogList = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const baseURL = `http://localhost:8082/miniblog/backend/v1/blogs`;\n  const headers = {\n    apikey: \"2347edfd-c55c-4f59-96ee-600492f904f3\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\"\n  };\n  const [allEmployees, setAllEmployees] = useState([]);\n  const [list, setList] = useState([]);\n  const clicked = props.clicked;\n  useEffect(() => {\n    axios.get(baseURL, {\n      headers\n    }).then(response => {\n      setBlogs(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    //getting list of employees who should be selected\n    axios.get(baseURL, {\n      headers\n    }).then(data => {\n      setBlogs(blogs.map(t => {\n        if (list.includes(t.id)) {\n          return {\n            select: true,\n            id: t.id,\n            name: t.name\n          };\n        } else {\n          return {\n            select: false,\n            id: t.id,\n            name: t.name\n          };\n        }\n      }));\n      console.log(allEmployees); // <<\n\n      console.log(list); //  <<\n    });\n  }, [clicked]);\n  if (!allEmployees.length || !list.length) return null;\n  console.log(blogs);\n  const [currentPage, setCurrentPage] = useState(1);\n  const currentData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return blogs.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: [currentData.map(blog => {\n      return /*#__PURE__*/_jsxDEV(Blog, {\n        id: blog.id,\n        image: blog.image,\n        title: blog.title,\n        intro: blog.intro,\n        createdAt: blog.createdAt,\n        category: blog.category\n      }, blog.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-bar\",\n      currentPage: currentPage,\n      totalCount: blogs.length,\n      pageSize: PageSize,\n      onPageChange: page => setCurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlogList, \"z1tUn8bVGEbG7bWykQFl8UHEaL4=\");\n\n_c = BlogList;\nexport default BlogList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"sources":["/home/linh/FS01-Training/diep-dang/miniblog/user_interface/src/components/Blog/BlogList.jsx"],"names":["React","useEffect","useState","useMemo","Blog","axios","Pagination","PageSize","BlogList","blogs","setBlogs","baseURL","headers","apikey","allEmployees","setAllEmployees","list","setList","clicked","props","get","then","response","data","map","t","includes","id","select","name","console","log","length","currentPage","setCurrentPage","currentData","firstPageIndex","lastPageIndex","slice","blog","image","title","intro","createdAt","category","page"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport Blog from \"./index\";\nimport axios from \"axios\";\nimport Pagination from \"../Pagination/Pagination\";\n\nlet PageSize = 4;\n\nconst BlogList = () => {\n  const [blogs, setBlogs] = useState([]);\n  const baseURL = `http://localhost:8082/miniblog/backend/v1/blogs`;\n  const headers = {\n    apikey: \"2347edfd-c55c-4f59-96ee-600492f904f3\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n  };\n  \n  const [allEmployees, setAllEmployees] = useState([]);\n  const [list, setList] = useState([]);\n const clicked = props.clicked;\n  useEffect(() => {\n    axios.get(baseURL, { headers }).then((response) => {\n      setBlogs(response.data);\n    });\n  }, []);\n\n  useEffect(()=>{        //getting list of employees who should be selected\n    axios.get(baseURL, { headers }).then((data) => {\n      setBlogs(\n        blogs.map(t=>{\n          if(list.includes(t.id)){\n            return{\n              select: true,\n              id: t.id,\n              name: t.name\n            }\n          }else{\n            return{\n              select: false,\n              id: t.id,\n              name: t.name\n            }\n          }\n        })\n      )\n      console.log(allEmployees);// <<\n      console.log(list);//  <<\n    });\n  },[clicked]);\n \n \n  if(!allEmployees.length ||  !list.length) return null \n  \n  console.log(blogs);\n\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentData = useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * PageSize;\n    const lastPageIndex = firstPageIndex + PageSize;\n    return blogs.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage]);\n  \n  return (\n    <div className=\"blog-list\">\n      {currentData.map((blog) => {\n        return (\n          <Blog\n            key={blog.id}\n            id={blog.id}\n            image={blog.image}\n            title={blog.title}\n            intro={blog.intro}\n            createdAt={blog.createdAt}\n            category={blog.category}\n          />\n        );\n      })}\n      <Pagination\n        className=\"pagination-bar\"\n        currentPage={currentPage}\n        totalCount={blogs.length}\n        pageSize={PageSize}\n        onPageChange={page => setCurrentPage(page)}\n      />\n    </div>\n  );\n};\n\nexport default BlogList;\n"]},"metadata":{},"sourceType":"module"}